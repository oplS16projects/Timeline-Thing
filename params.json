{
  "name": "Timeline",
  "tagline": "The official home of Timeline on GitHub",
  "body": "# FP7-webpage Timeline\r\n\r\n##Authors\r\nJacob Suarez @Onamar\r\n\r\nTyrone Turrel @tturrell\r\n\r\nSaurabh Verma @sv-uml\r\n\r\n##Overview\r\nA timeline builder using a SQL Database to create and edit timelines\r\n\r\n##Screenshot\r\n![screenshot of login page](https://github.com/oplS16projects/Timeline-Thing/blob/master/screenshot.PNG?raw=true)\r\n\r\n##Concepts Demonstrated\r\n* **Data Abstraction** is used in the use of the database.\r\n* **Modularity** through the database tools as well as setting local variables.\r\n\r\n##External Technology and Libraries\r\nLibraries used for the main webpage:\r\n\r\nracket/include`\r\n\r\n`racket/format`\r\n\r\n`racket-include`\r\n\r\n`racket/runtime-path`\r\n  \r\n`racket/date`\r\n\r\n`web-server/formlets`\r\n\r\n`web-server/templates`\r\n\r\n`web-server/servlet`\r\n\r\n`web-server/servlet-env`\r\n\r\n`web-server/http`\r\n\r\n`parser-tools/lex`\r\n\r\n`xml`\r\n\r\nLibraries used for the database:\r\n\r\n`racket/list`\r\n\r\n`racket/date`\r\n\r\n`db`\r\n\r\n##Favorite Scheme Expressions\r\n####Jacob Suarez @Onamar\r\nThis expression deletes an entry from the timeline. I like this expression because in writing it I learned a lot about databases and how to retrieve the id of posts within the database.\r\n```scheme\r\n(define (delete-entry! a-timeline n)\r\n  (query-exec\r\n   (timeline-db a-timeline)\r\n   \"DELETE FROM posts (title, body) WHERE id = n\"))\r\n```\r\n####Saurabh Verma @sv-uml\r\nI like this expression because it successfully converts the current version number from an external file, increments it by 0.01, then saves it back to the file. In a way, it's an almost perfect application version tracker that doesn't rely on a traditional database.\r\n```scheme\r\n(begin\r\n      (set! CURR_VERSION (+ (string->number (file->string FILE_VERSION_NAME)) 0.01))\r\n      (write-to-file FILE_VERSION_NAME CURR_VERSION))\r\n```\r\n\r\n#How to Download and Run\r\n####Latest Releases\r\nhttps://github.com/oplS16projects/Timeline-Thing/releases\r\n\r\nWhen you run the application from main.rkt, it should open up a page that says \"Welcome Back! ... Sign in to access your timelines\". The default email and password in the DB are \"admin@opl.com\" and \"admin\", respectively. Upon entering that and clicking the blue \"Sign In\" button, the page should automatically authenticate that email/pass combination on the backend and then redirect you to another page that reads \"Timelines\". On the top right hand corner, there is a Sign Out link, that unsets the logged in state and signs out the user. While our efforts demonstrated one side of the database interaction (authentication and API for talking with the DB). The ty-main.rkt & tyimodel.rkt files illustrated the other side, specifically the insertion of posts (which utilize a forked version of our APIs).\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}